import logging
import os
from datetime import datetime
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

logger = logging.getLogger(__name__)

class DialogueExporter:
    def __init__(self):
        self.drive_service = None
        # Берем ID папки из переменной окружения
        self.folder_id = os.getenv('GOOGLE_DRIVE_FOLDER_ID')
        if self.folder_id:
            logger.info(f"Using folder ID from env: {self.folder_id}")
            self._init_drive()
        else:
            logger.warning("No GOOGLE_DRIVE_FOLDER_ID in environment")
    
    def _init_drive(self):
        """Инициализация Google Drive API"""
        try:
            SCOPES = ['https://www.googleapis.com/auth/drive.file']
            creds = service_account.Credentials.from_service_account_file(
                'credentials.json', scopes=SCOPES
            )
            self.drive_service = build('drive', 'v3', credentials=creds)
            logger.info("Drive service initialized")
        except Exception as e:
            logger.error(f"Failed to init Drive: {e}")
    
    async def save_dialogue_to_drive(self, client_id, client_name, booking_info, dialogue_history):
        """Сохраняет диалог в папку"""
        try:
            if not self.folder_id:
                logger.error("No folder ID")
                return None
            
            # Формируем содержимое
            content = f"ЗАПИСЬ КЛИЕНТА\n{'='*50}\n\n"
            content += f"Клиент: {client_name}\n"
            content += f"Telegram ID: {client_id}\n"
            content += f"Дата: {booking_info.get('date')}\n"
            content += f"Время: {booking_info.get('time')}\n"
            content += f"Услуга: {booking_info.get('service')}\n"
            content += f"Специалист: {booking_info.get('specialist')}\n\n"
            content += f"{'='*50}\nИСТОРИЯ ДИАЛОГА\n{'='*50}\n\n"
            
            for msg in dialogue_history:
                timestamp = msg.get('timestamp', '')
                if hasattr(timestamp, 'strftime'):
                    timestamp = timestamp.strftime("%d.%m %H:%M")
                role = "Клиент" if msg.get('role') == 'user' else "Бот"
                content += f"[{timestamp}] {role}: {msg.get('message', '')}\n\n"
            
            # Создаем файл
            timestamp = datetime.now().strftime("%Y%m%d_%H%M")
            file_metadata = {
                'name': f'{client_name}_{booking_info.get("date")}_{timestamp}.txt',
                'parents': [self.folder_id]
            }
            
            from googleapiclient.http import MediaInMemoryUpload
            media = MediaInMemoryUpload(
                content.encode('utf-8'),
                mimetype='text/plain'
            )
            
            file = self.drive_service.files().create(
                body=file_metadata,
                media_body=media,
                fields='id'
            ).execute()
            
            file_id = file.get('id')
            logger.info(f"Saved dialogue to Drive: {file_id}")
            return file_id
            
        except Exception as e:
            logger.error(f"Save error: {e}")
            return None
